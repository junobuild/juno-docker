#!/usr/bin/env bash

CONFIG_PATH=./ic-https-outcalls-adapter.json
SOCK_PATH=/juno/.juno/sock

# Clean-up previous socket file otherwise the ic-https-outcalls-adapter cannot starts again and make HTTP Outcalls fails when the container is restarted
# See: https://forum.dfinity.org/t/local-http-ic-https-outcalls-adapter-cache-cleanup-and-errors/27992
rm $SOCK_PATH 2> /dev/null

# Note: "The socks proxy field needs to be set but is not relevant for local development."
# Source: https://forum.dfinity.org/t/failed-to-add-canister-http-request-to-queue-brokenconnection/27434/6?u=peterparker
function create_config() {
  cat << EOF > "$CONFIG_PATH"
{
  "incoming_source": {
    "Path": "$SOCK_PATH"
  },
  "socks_proxy": "socks5://notaproxy:1080",
  "logger": {
    "level": "error"
  }
}
EOF
}

if [ ! -f "$CONFIG_PATH" ]; then
  create_config
fi

"$TARGET_DIR/ic-https-outcalls-adapter" "$CONFIG_PATH"